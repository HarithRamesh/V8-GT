{"ast":null,"code":"var _jsxFileName = \"/Users/I563108/Documents/MyProject/V8-GT/Client/src/Context/useContextProvider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const context = /*#__PURE__*/React.createContext(null);\nconst useContextProvider = children => {\n  _s();\n  const [user, setUser] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(context.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n_s(useContextProvider, \"O8A1O7ueRI69RLawqs90Wgk1R68=\");\nexport default useContextProvider;","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","context","createContext","useContextProvider","children","_s","user","setUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/I563108/Documents/MyProject/V8-GT/Client/src/Context/useContextProvider.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, useState } from 'react'\n interface contextType {\n     user: string,\n     setUser: Dispatch<SetStateAction<string>> \n }\n export const context = React.createContext<contextType|null>(null)\nconst useContextProvider = (children:string) => {\n    const [user, setUser] = useState<string>(\"\")\n  return (\n      <context.Provider value={{ user, setUser }}>\n          {children}\n        </context.Provider>\n  )\n}\n\nexport default useContextProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA8BC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKhE,OAAO,MAAMC,OAAO,gBAAGJ,KAAK,CAACK,aAAa,CAAmB,IAAI,CAAC;AACnE,MAAMC,kBAAkB,GAAIC,QAAe,IAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,oBACIE,OAAA,CAACC,OAAO,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEH,IAAI;MAAEC;IAAQ,CAAE;IAAAH,QAAA,EACtCA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE3B,CAAC;AAAAR,EAAA,CAPKF,kBAAkB;AASxB,eAAeA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}